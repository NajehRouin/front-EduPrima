{
    "sourceFile": "src/pages/Enseignant/GestionCours.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748799877775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748799996986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from \"react\";\r\n import { FaTrash } from \"react-icons/fa\";\r\n import ApiEnseignant from \"../../Api/Enseignant\";\r\n import AjouterCoursModal from \"../../components/AjouterCoursModal\";\r\n-import AjouterCoursGeneralModal from \"../../components/AjouterCoursGeneralModal\";\r\n+import AjouterCoursGeneralModal from \"../../components/AjouterCoursGeneralModal \";\r\n import { useNavigate } from \"react-router-dom\";\r\n \r\n // Composant Modal de confirmation\r\n const ConfirmationModal = ({ isOpen, onClose, onConfirm, coursTitre }) => {\r\n"
                },
                {
                    "date": 1748800129114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,11 @@\n     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n       <div className=\"bg-white rounded-lg p-6 w-96\">\r\n         <h2 className=\"text-xl font-semibold mb-4\">Confirmer la suppression</h2>\r\n         <p className=\"text-gray-600 mb-6\">\r\n-          Êtes-vous sûr de vouloir supprimer le cours \"{coursTitre}\" ? Cette action\r\n-          est irréversible et supprimera également les ressources, activités et dépôts associés.\r\n+          Êtes-vous sûr de vouloir supprimer le cours \"{coursTitre}\" ? Cette\r\n+          action est irréversible et supprimera également les ressources,\r\n+          activités et dépôts associés.\r\n         </p>\r\n         <div className=\"flex justify-end space-x-4\">\r\n           <button\r\n             className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-md\"\r\n@@ -331,5 +332,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default GestionCours;\n\\ No newline at end of file\n+export default GestionCours;\r\n"
                }
            ],
            "date": 1748799877775,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport ApiEnseignant from \"../../Api/Enseignant\";\r\nimport AjouterCoursModal from \"../../components/AjouterCoursModal\";\r\nimport AjouterCoursGeneralModal from \"../../components/AjouterCoursGeneralModal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Composant Modal de confirmation\r\nconst ConfirmationModal = ({ isOpen, onClose, onConfirm, coursTitre }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-96\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Confirmer la suppression</h2>\r\n        <p className=\"text-gray-600 mb-6\">\r\n          Êtes-vous sûr de vouloir supprimer le cours \"{coursTitre}\" ? Cette action\r\n          est irréversible et supprimera également les ressources, activités et dépôts associés.\r\n        </p>\r\n        <div className=\"flex justify-end space-x-4\">\r\n          <button\r\n            className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-md\"\r\n            onClick={onClose}\r\n          >\r\n            Annuler\r\n          </button>\r\n          <button\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded-md\"\r\n            onClick={onConfirm}\r\n          >\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Composant CoursCard\r\nconst CoursCard = ({\r\n  titre,\r\n  description,\r\n  dateCreation,\r\n  activites,\r\n  onDelete,\r\n  detais,\r\n  gereActivite,\r\n  coursId,\r\n}) => {\r\n  const date = new Date(dateCreation);\r\n  const formattedDate = `${date.getDate()}/${\r\n    date.getMonth() + 1\r\n  }/${date.getFullYear()}`;\r\n  const numberOfActivities = activites.length;\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-lg rounded-lg p-4 m-4 w-80\">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        <h3 className=\"text-xl font-bold\">{titre}</h3>\r\n        <button\r\n          onClick={handleDelete}\r\n          className=\"text-red-500 hover:text-red-700\"\r\n        >\r\n          <FaTrash />\r\n        </button>\r\n      </div>\r\n      <p className=\"text-gray-600\">{description}</p>\r\n      <p className=\"text-gray-500 mt-2\">Créé le: {formattedDate}</p>\r\n      <p className=\"text-gray-500 mt-2\">\r\n        Nombre d'activités: {numberOfActivities}\r\n      </p>\r\n      <div className=\"mt-4 flex justify-between\">\r\n        <button\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md\"\r\n          onClick={detais}\r\n        >\r\n          Voir Détails\r\n        </button>\r\n        <button\r\n          className=\"bg-green-500 text-white px-4 py-2 rounded-md\"\r\n          onClick={gereActivite}\r\n        >\r\n          Gérer les Activités\r\n        </button>\r\n      </div>\r\n      <ConfirmationModal\r\n        isOpen={showModal}\r\n        onClose={() => setShowModal(false)}\r\n        onConfirm={() => {\r\n          onDelete(coursId);\r\n          setShowModal(false);\r\n        }}\r\n        coursTitre={titre}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Composant CoursGroupes\r\nconst CoursGroupes = ({ data, onAddCours, onDeleteCours }) => {\r\n  const [pagination, setPagination] = useState({});\r\n  const [searchTerms, setSearchTerms] = useState({});\r\n  const navigate = useNavigate();\r\n  const itemsPerPage = 3;\r\n\r\n  const handlePageChange = (classeId, direction) => {\r\n    setPagination((prev) => {\r\n      const currentPage = prev[classeId] || 1;\r\n      const newPage =\r\n        direction === \"next\" ? currentPage + 1 : Math.max(currentPage - 1, 1);\r\n      return { ...prev, [classeId]: newPage };\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (classeId, value) => {\r\n    setSearchTerms((prev) => ({ ...prev, [classeId]: value }));\r\n  };\r\n\r\n  const handleVoirPlus = (lienUrl) => {\r\n    if (lienUrl) {\r\n      navigate(\r\n        `/enseignant/dashboard/resource?url=${encodeURIComponent(lienUrl)}`\r\n      );\r\n    } else {\r\n      console.error(\"Lien URL non disponible\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center\">\r\n      {data.map((classe) => {\r\n        const currentPage = pagination[classe._id] || 1;\r\n        const searchTerm = searchTerms[classe._id] || \"\";\r\n\r\n        const filteredCours = classe.cours.filter((cours) =>\r\n          cours.titre.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const paginatedCours = filteredCours.slice(\r\n          startIndex,\r\n          startIndex + itemsPerPage\r\n        );\r\n        const totalPages = Math.ceil(filteredCours.length / itemsPerPage);\r\n\r\n        return (\r\n          <div key={classe._id} className=\"w-full p-4\">\r\n            <div className=\"bg-gray-200 p-4 rounded-lg mb-6\">\r\n              <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-4\">\r\n                <div>\r\n                  <h2 className=\"text-2xl font-semibold\">{classe.nomClasse}</h2>\r\n                  <h3 className=\"text-xl text-gray-600\">{classe.niveau}</h3>\r\n                </div>\r\n                <div className=\"flex flex-col sm:flex-row items-center gap-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Rechercher un cours...\"\r\n                    className=\"px-2 py-1 rounded border border-gray-300\"\r\n                    value={searchTerm}\r\n                    onChange={(e) =>\r\n                      handleSearchChange(classe._id, e.target.value)\r\n                    }\r\n                  />\r\n                  <button\r\n                    className=\"bg-indigo-500 text-white px-4 py-2 rounded-md\"\r\n                    onClick={() => onAddCours(classe)}\r\n                  >\r\n                    Ajouter un cours\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-4 flex space-x-6 overflow-x-auto\">\r\n                {paginatedCours.map((cours) => (\r\n                  <div key={cours._id} className=\"flex-none\">\r\n                    <CoursCard\r\n                      titre={cours.titre}\r\n                      description={cours.description}\r\n                      dateCreation={cours.dateCreation}\r\n                      activites={cours.activites}\r\n                      coursId={cours._id}\r\n                      onDelete={onDeleteCours}\r\n                      detais={() => handleVoirPlus(cours?.resource?.lienUrl)}\r\n                      gereActivite={() =>\r\n                        navigate(\"/enseignant/dashboard/activites\", {\r\n                          state: {\r\n                            activites: cours.activites,\r\n                            titre: cours.titre,\r\n                            idCours: cours._id,\r\n                          },\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {totalPages > 1 && (\r\n                <div className=\"mt-4 flex justify-center space-x-4\">\r\n                  <button\r\n                    onClick={() => handlePageChange(classe._id, \"prev\")}\r\n                    disabled={currentPage === 1}\r\n                    className=\"px-3 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n                  >\r\n                    Précédent\r\n                  </button>\r\n                  <span className=\"text-sm text-gray-700\">\r\n                    Page {currentPage} / {totalPages}\r\n                  </span>\r\n                  <button\r\n                    onClick={() => handlePageChange(classe._id, \"next\")}\r\n                    disabled={currentPage === totalPages}\r\n                    className=\"px-3 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n                  >\r\n                    Suivant\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Composant principal GestionCours\r\nfunction GestionCours() {\r\n  const [coursData, setCoursData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedClasseId, setSelectedClasseId] = useState(null);\r\n  const [modalfirstCours, setModalFirstCours] = useState(false);\r\n\r\n  const getCours = async () => {\r\n    try {\r\n      const response = await fetch(ApiEnseignant.coursbyEnseignant.url, {\r\n        method: ApiEnseignant.coursbyEnseignant.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setCoursData(responseData?.result || []);\r\n    } catch (error) {\r\n      console.log(\"er\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCours = async (coursId) => {\r\n    try {\r\n      const response = await fetch(ApiEnseignant.deleteCoursById.url, {\r\n        method: ApiEnseignant.deleteCoursById.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ idCours: coursId }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      if (responseData.success) {\r\n        // Rafraîchir les données après suppression\r\n        await getCours();\r\n      } else {\r\n        console.error(\"Erreur lors de la suppression:\", responseData.msg);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCours();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      {coursData.length === 0 ? (\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            className=\"bg-indigo-500 text-white px-4 py-2 rounded-md\"\r\n            onClick={() => setModalFirstCours(true)}\r\n          >\r\n            Ajouter un cours\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              className=\"bg-indigo-500 text-white px-4 py-2 rounded-md\"\r\n              onClick={() => setModalFirstCours(true)}\r\n            >\r\n              Ajouter un cours\r\n            </button>\r\n          </div>\r\n          <CoursGroupes\r\n            data={coursData}\r\n            onAddCours={(classeId) => {\r\n              setSelectedClasseId(classeId);\r\n              setShowModal(true);\r\n            }}\r\n            onDeleteCours={handleDeleteCours}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {showModal && (\r\n        <AjouterCoursModal\r\n          isOpen={showModal}\r\n          onClose={() => setShowModal(false)}\r\n          fetchdata={getCours}\r\n          classeId={selectedClasseId}\r\n        />\r\n      )}\r\n\r\n      {modalfirstCours && (\r\n        <AjouterCoursGeneralModal\r\n          isOpen={modalfirstCours}\r\n          onClose={() => setModalFirstCours(false)}\r\n          fetchdata={getCours}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionCours;"
        }
    ]
}