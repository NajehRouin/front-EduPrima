{
    "sourceFile": "src/components/AjouterProfesseur.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748288663852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748288671317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n   };\r\n \r\n   useEffect(() => {\r\n     getAllClasses();\r\n+    getAllSpecialite()\r\n   }, []);\r\n \r\n   const handleAddClasse = (e) => {\r\n     const selectedId = e.target.value;\r\n"
                },
                {
                    "date": 1748288939515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,22 +209,34 @@\n               </ul>\r\n             </div>\r\n           )}\r\n \r\n-          <div className=\"mb-4\">\r\n+\r\n+\r\n+\r\n+             <div className=\"mb-4\">\r\n             <label className=\"block text-gray-700\">Spécialité</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              value={specialite}\r\n-              onChange={(e) => setSpecialite(e.target.value)}\r\n+            <select\r\n               className=\"border p-2 w-full rounded-md\"\r\n-              placeholder=\"Spécialité\"\r\n-            />\r\n-            {errors.specialite && (\r\n+                 onChange={(e) => setSpecialite(e.target.value)}\r\n+              defaultValue=\"\"\r\n+            >\r\n+              <option value=\"\" disabled>\r\n+                Sélectionner une Spécialité\r\n+              </option>\r\n+              {specialites.map((sp) => (\r\n+                <option key={sp._id} value={classe.label}>\r\n+                  {sp.label} \r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+             {errors.specialite && (\r\n               <p className=\"text-red-500 text-sm mt-1\">{errors.specialite}</p>\r\n             )}\r\n           </div>\r\n \r\n+   \r\n+\r\n           <div className=\"flex justify-end gap-4\">\r\n             <button\r\n               onClick={closeModal}\r\n               className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-md\"\r\n"
                }
            ],
            "date": 1748288663852,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ApiEnseignant from \"../Api/Enseignant\";\r\nimport Apiclasse from \"../Api/classe\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport ApiSpecialite from \"../Api/Specialite\";\r\nfunction AjouterProfesseur({ isOpen, closeModal, fetchdata }) {\r\n  const [nom, setNom] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n const [specialites, setSpecialites] = useState(\"\");\r\n\r\n  const [motDePasse, setMotDePasse] = useState(\"\");\r\n  const [specialite, setSpecialite] = useState(\"\");\r\n\r\n  const [otherClasses, setOtherClasses] = useState([]);\r\n  const [selectedClasseIds, setSelectedClasseIds] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const getAllClasses = async () => {\r\n    try {\r\n      const dataResponse = await fetch(Apiclasse.getAllClasse.url, {\r\n        method: Apiclasse.getAllClasse.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const response = await dataResponse.json();\r\n      const allClasses = response?.result;\r\n      setOtherClasses(allClasses || []);\r\n    } catch (error) {\r\n      console.log(\"Erreur lors de la récupération des classes\", error);\r\n    }\r\n  };\r\n  const getAllSpecialite=async()=>{\r\n        try {\r\n      const dataResponse = await fetch(ApiSpecialite.getAllSpecialite.url, {\r\n        method: ApiSpecialite.getAllSpecialite.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const response = await dataResponse.json();\r\n     \r\n      setSpecialites(response?.result || []);\r\n      console.log('response?.result',response?.result)\r\n    } catch (error) {\r\n      console.log(\"Erreur lors de la récupération des specialite\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllClasses();\r\n  }, []);\r\n\r\n  const handleAddClasse = (e) => {\r\n    const selectedId = e.target.value;\r\n    if (selectedId && !selectedClasseIds.includes(selectedId)) {\r\n      setSelectedClasseIds([...selectedClasseIds, selectedId]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClasse = (id) => {\r\n    const updatedSelectedIds = selectedClasseIds.filter((cid) => cid !== id);\r\n    setSelectedClasseIds(updatedSelectedIds);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const newErrors = {};\r\n    if (!nom) newErrors.nom = \"Champ obligatoire\";\r\n    if (!email) newErrors.email = \"Champ obligatoire\";\r\n    if (!motDePasse) newErrors.motDePasse = \"Champ obligatoire\";\r\n    if (!specialite) newErrors.specialite = \"Champ obligatoire\";\r\n    if (selectedClasseIds.length === 0) newErrors.classes = \"Champ obligatoire\";\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      return;\r\n    }\r\n    const dataResponse = await fetch(ApiEnseignant.AjouterEnseignant.url, {\r\n      method: ApiEnseignant.AjouterEnseignant.method,\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        nom,\r\n        email,\r\n        motDePasse,\r\n        specialite,\r\n        classes: selectedClasseIds,\r\n      }),\r\n    });\r\n\r\n    const response = await dataResponse.json();\r\n    if (response.success) {\r\n      toast.success(response.msg);\r\n      fetchdata();\r\n      setTimeout(() => {\r\n        closeModal();\r\n      }, 2000);\r\n    } else {\r\n      toast.error(response.msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    isOpen && (\r\n      <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50\">\r\n        <ToastContainer position=\"top-center\" />\r\n        <div className=\"bg-white p-6 rounded-md shadow-lg w-[600px] max-h-[80vh] overflow-y-auto\">\r\n          <h2 className=\"text-xl text-center font-semibold mb-4\">\r\n            Ajouter un Enseignant\r\n          </h2>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Nom</label>\r\n            <input\r\n              type=\"text\"\r\n              value={nom}\r\n              onChange={(e) => setNom(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Nom\"\r\n            />\r\n            {errors.nom && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{errors.nom}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Email\"\r\n            />\r\n            {errors.email && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={motDePasse}\r\n              onChange={(e) => setMotDePasse(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Mot de passe\"\r\n            />\r\n            {errors.motDePasse && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{errors.motDePasse}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Ajouter des classes</label>\r\n            <select\r\n              className=\"border p-2 w-full rounded-md\"\r\n              onChange={handleAddClasse}\r\n              defaultValue=\"\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Sélectionner une classe\r\n              </option>\r\n              {otherClasses.map((classe) => (\r\n                <option key={classe._id} value={classe._id}>\r\n                  {classe.niveau} {classe.nomClasse}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.classes && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{errors.classes}</p>\r\n            )}\r\n          </div>\r\n\r\n          {selectedClasseIds.length > 0 && (\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700\">Classes ajoutées :</label>\r\n              <ul className=\"list-disc pl-5 text-gray-800\">\r\n                {selectedClasseIds.map((id) => {\r\n                  const classe = otherClasses.find((c) => c._id === id);\r\n                  return (\r\n                    classe && (\r\n                      <li\r\n                        key={id}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <span>\r\n                          {classe.niveau} {classe.nomClasse}\r\n                        </span>\r\n                        <button\r\n                          onClick={() => handleRemoveClasse(id)}\r\n                          className=\"text-red-500 ml-2 hover:text-red-700\"\r\n                          title=\"Supprimer cette classe\"\r\n                        >\r\n                          <FaTrash />\r\n                        </button>\r\n                      </li>\r\n                    )\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Spécialité</label>\r\n            <input\r\n              type=\"text\"\r\n              value={specialite}\r\n              onChange={(e) => setSpecialite(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Spécialité\"\r\n            />\r\n            {errors.specialite && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{errors.specialite}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-4\">\r\n            <button\r\n              onClick={closeModal}\r\n              className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-md\"\r\n            >\r\n              Annuler\r\n            </button>\r\n            <button\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-md\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Ajouter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default AjouterProfesseur;\r\n"
        }
    ]
}