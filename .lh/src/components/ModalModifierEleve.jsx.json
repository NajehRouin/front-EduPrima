{
    "sourceFile": "src/components/ModalModifierEleve.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748471328379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748471328379,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Api from \"../Api/Eleve\";\r\n\r\nfunction ModalModifierEleve({ isOpen, closeModal, eleve, fetchData }) {\r\n  const [nom, setNom] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [motDePasse, setMotDePasse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (eleve) {\r\n      setNom(eleve.nom || \"\");\r\n      setEmail(eleve.email || \"\");\r\n    }\r\n  }, [eleve]);\r\n\r\n  const handleUpdate = async () => {\r\n    if (!nom.trim()) {\r\n      toast.error(\"Le nom est  obligatoires.\");\r\n      return;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      toast.error(\"l'email sont obligatoires.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(Api.modifierEleve.url, {\r\n        method: Api.modifierEleve.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          idEleve: eleve._id,\r\n          nom,\r\n          email,\r\n          motDePasse,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        toast.success(\"Élève modifié avec succès !\");\r\n        fetchData();\r\n        setTimeout(() => {\r\n          closeModal();\r\n        }, 1000);\r\n      } else {\r\n        toast.error(\"Échec de la modification\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error(\"Erreur serveur\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    isOpen && (\r\n      <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50\">\r\n        <ToastContainer position=\"top-center\" />\r\n        <div className=\"bg-white p-6 rounded-md shadow-lg w-1/3\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-center\">\r\n            Modifier l'élève\r\n          </h2>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Nom && Prénom</label>\r\n            <input\r\n              type=\"text\"\r\n              value={nom}\r\n              onChange={(e) => setNom(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Nom de l'élève\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Identifiant</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Email de l'élève\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700\">Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={motDePasse}\r\n              onChange={(e) => setMotDePasse(e.target.value)}\r\n              className=\"border p-2 w-full rounded-md\"\r\n              placeholder=\"Mot de passe (laisser vide pour ne pas changer)\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-4\">\r\n            <button\r\n              onClick={closeModal}\r\n              className=\"bg-gray-300 px-4 py-2 rounded-md hover:bg-gray-400\"\r\n            >\r\n              Annuler\r\n            </button>\r\n            <button\r\n              onClick={handleUpdate}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n            >\r\n              Enregistrer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ModalModifierEleve;\r\n"
        }
    ]
}